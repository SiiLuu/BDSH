#!/bin/bash

check_args () {
    value="$2"
    value=`echo "$2" | cut -d "." -f2`
    if [ "$1" = "-h" -a -z "$2" ];then
        echo "Usage: ./bdsh [OPTION]... [COMMAND] [REQUEST]"
        echo "OPTION:"
        echo "  -h				display usage"
        echo "  -f FILE			json database file"
        echo "  -j                json formated output for select command"
        exit 0
    elif [ -z "$4" -o "$1" != "-f" -o "$value" != "json" -o \
            "$3" != "create" -a  "$3" != "insert" -a "$3" != "select" -a \
            "$3" != "update" -a "$3" != "delete" -a "$3" != "describe" ];then
        echo "Usage: ./bdsh [OPTION]... [COMMAND] [REQUEST]"
        echo "OPTION:"
        echo "  -h				display usage"
        echo "  -f FILE			json database file"
        echo "  -j                json formated output for select command"
        exit 1
    fi
}

create () {
    if [ -f "$2" -a "$4" = "database" ];then
        echo "Usage: ./bdsh [OPTION]... [COMMAND] [REQUEST]"
        echo "OPTION:"
        echo "  -h				display usage"
        echo "  -f FILE			json database file"
        echo "  -j                json formated output for select command"
        exit 1
    elif [ "$4" = "table" ];then
        if [ -z "$6" ];then
            sed '2 i\  "desc_'$5'": [\n  ]' "$2"
        else
            var=`echo "$6" | sed "s/,/\",\n\"/g"`
            sed '2 i\  "desc_'$5'": [\n  "'$var'"\n  ]' "$2"
        fi
    else
        touch "$2"
        echo "{" > "$2"  
        echo "}" >> "$2"
    fi
}

describe () {
    sed -n '/desc_'$4'/,/],/p' "$2" | head -n -1 |  tail -n +2 | tr -d '"' | tr -d " "
}

main () {
    check_args "$@"
    if [ "$3" = "create" ];then
        create "$@"
    elif [ "$3" = "insert" ];then
        insert "$@"
    elif [ "$3" = "describe" ];then
        describe "$@"
    fi
}

main "$@"

####ERRORS
##PAS DE '=' ENTRE LE NOM ET LA VALEUR DE CHAQUE VARIABLE